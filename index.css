@import "tailwindcss";

:root {
  --text-base: 20.5px;
  --text-lg: 24px;
  --text-xl: clamp(72px, 13vw, 11rem);
  --text-xl--line-height: 1;

  --space-site: 1rem;
  --space-nav: 0.25rem;
  --space-section: 4rem;
  --space-section-title: 1.25rem;
  --space-dialog-inline: 1.25rem;
  --space-dialog-block: 2.5rem;

  /* > md */
  @media screen and (min-width: 704px) {
    --text-base: 22px;
    --text-lg: 30px;

    --space-site: 2rem;
    --space-nav: 0.5rem;
    --space-section: 5rem;
    --space-section-title: 1.5rem;
    --space-dialog-inline: 2rem;
    --space-dialog-block: 3rem;
  }

  /* > lg */
  @media screen and (min-width: 960px) {
    --space-site: 3rem;
    --space-nav: 1rem;
    --space-section: 6rem;
    --space-section-title: 2rem;
    --space-dialog-inline: 4.5rem;
    --space-dialog-block: 3.5rem;
  }

  /* > xl */
  @media screen and (min-width: 1120px) {
    --space-site: 3rem;
    --space-nav: 1rem;
    --space-section: 6rem;
    --space-section-title: 2.5rem;
  }
}

@theme {
  --breakpoint-sm: 40rem; /* 640px */
  --breakpoint-md: 44rem; /* 704px */
  --breakpoint-lg: 60rem; /* 960px */
  --breakpoint-xl: 70rem; /* 1120px */

  --container-4xl: 52rem;

  --shadow-zine: 0.5px 0.5px 1px lch(0% 0 0 / 0.1), 1px 1px 12px -4px lch(0% 0 0 / 0.2);
  --shadow-page: 0.33px 0.33px 1px lch(0% 0 0 / 0.1), 0.75px 0.75px 0.75px lch(0% 0 0 / 0.1);

  --color-gainsboro: Gainsboro;
  --color-link: #0000ee;
  --color-link-visited: #551a8b;
  --color-dark-grey: DarkGray;
  --color-grey: gray;
  --color-ghost-white: GhostWhite;
  --color-white-smoke: WhiteSmoke;

  --spacing-site: var(--space-site);
  --spacing-nav: var(--space-nav);
  --spacing-section: var(--space-section);
  --spacing-section-title: var(--space-section-title);
  --spacing-dialog-inline: var(--space-dialog-inline);
  --spacing-dialog-block: var(--space-dialog-block);

  --perspective-zine: 2000px;
  --duration-zine: 1000ms;
  --aspect-zine: 5.5 / 4.25;
  --ease-zine: cubic-bezier(0, 0, 0.2, 1);

  --radius: 3px;

  --text-xl: var(--text-xl);
  --text-lg: var(--text-lg);
  --text-base: var(--text-base);

  --tracking-wide: 0.0125em;
}

@layer components {
  .zine-store-container {
    width: 100%;
    max-width: 1400px;
    padding-inline-start: var(--spacing-site);
    padding-inline-end: var(--spacing-site);
  }

  .navigation-button {
    font-size: 20px;
    line-height: 1;
    block-size: max(25%, 72px);
    inline-size: 64px;
    font-weight: bold;
    flex-shrink: 0;

    &[data-action="prev-narrow"],
    &[data-action="next-narrow"] {
      display: none;
    }
  }

  /* the element with the perspective effect */
  /* narrow screen size */
  @media screen and (max-width: 704px) {
    [data-zine-part="outer"] {
      transform: none !important;
      container-type: inline-size;
    }
  }

  /* the actual "zine". The parent element of all the pages */
  [data-zine-part="spread"] {
    --translation-amount: 0%;
    --translation-offset: 0%;
    transform: translateX(calc(var(--translation-amount) + var(--translation-offset)));

    /* these lines position the zine centered when it's closed */
    &.front-cover {
      --translation-amount: -25%;
    }

    &.back-cover {
      --translation-amount: 25%;
    }
  }
  /* narrow screen size */
  @media screen and (max-width: 704px) {
    [data-zine-part="outer"] {
      transform: none !important;
      container-type: inline-size;
    }

    [data-zine-part="spread"] {
      --narrow-width: min(768px, 190%);
      width: var(--narrow-width);

      /* translate left 0% or 50% of the zine width, and then right half of the difference between the page width and the container width */
      --translation-amount: 0%;
      --translation-offset: ((100cqi - 50%) / 2);

      &.back-cover {
        --translation-amount: 0%;
      }
      &.front-cover,
      &.right:not(.front-cover) {
        --translation-amount: -50%;
      }
    }
  }

  [data-zine-part="page"] {
    display: none;
    box-shadow: var(--page-shadow), var(--zine-shadow);
    transition-behavior: allow-discrete;

    &.visible {
      display: block;
    }
  }

  [data-zine-part="spread"] {
    transition: transform calc(var(--duration-zine) * 0.75) var(--ease-zine);
  }

  @media screen and (min-width: 704px) {
    [data-zine-part="spread"] {
      transition: none;
    }
  }

  /* run the flipping animations when browser supports it */
  @supports (content-visibility: auto) {
    [data-zine-part="outer"] {
      transform: rotateX(calc(1deg * var(--aimY))) rotateY(calc(1deg * var(--aimX)));
    }

    [data-zine-part="spread"] {
      transition: transform calc(var(--duration-zine) * 0.75) var(--ease-zine);
    }
    /* this is zine shadow that moves with the perspective effect */
    [data-zine-part="spread"]::before {
      content: "";
      position: absolute;
      width: 100%;
      top: 0;
      bottom: 0;
      background: black;
      filter: blur(20px);
      opacity: 0.2;
      --duration-multiplier: 0.3;
      --rotateX: rotateX(calc(2deg * var(--aimY)));
      --rotateY: rotateY(calc(2deg * var(--aimX)));
      --scaleX: scaleX(calc((0.5% * max(var(--aimX), -1 * var(--aimX)) + 100%)));
      --scaleY: scaleY(calc((0.5% * max(var(--aimY), -1 * var(--aimY)) + 100%)));
      will-change: width;
      transform: var(--rotateX) var(--rotateY) var(--scaleX) var(--scaleY);
      transition: width calc(var(--duration-zine) * var(--duration-multiplier)) var(--ease-zine);
    }

    /* shadow delay when aninmating from the front cover to the first spread */
    [data-zine-part="spread"]:not(.back-cover)[data-direction="increment"]::before {
      right: 0;
      --duration-multiplier: 0.75;
      transition-delay: calc(var(--duration-zine) * 0.175);
    }

    /* shadow delay when aninmating from the back cover to the final spread */
    [data-zine-part="spread"]:not(.front-cover)[data-direction="decrement"]::before {
      --duration-multiplier: 0.75;
      transition-delay: calc(var(--duration-zine) * 0.175);
    }

    /* shadow positioning when on the front cover */
    [data-zine-part="spread"].front-cover::before {
      width: 50%;
      right: 0;
    }

    /* shadow positioning when on the back cover */
    [data-zine-part="spread"].back-cover::before {
      width: 50%;
      left: 0;
    }

    /* when navigating forward through the zine... */
    [data-zine-part="spread"][data-direction="increment"] [data-zine-part="page"] {
      /* left pages */
      &:nth-child(even) {
        &.animatingIn {
          animation: leftPageFlipLeft var(--duration-zine) var(--ease-zine);
        }

        &.animatingOut {
          animation: leftPageGetCovered var(--duration-zine) var(--ease-zine);
        }
      }

      /* right pages */
      &:nth-child(odd) {
        &.animatingOut {
          animation: rightPageFlipLeft var(--duration-zine) var(--ease-zine);
        }
      }
    }

    /* when navigating backward through the zine... */
    [data-zine-part="spread"][data-direction="decrement"] [data-zine-part="page"] {
      /* left pages */
      &:nth-child(even) {
        &.animatingOut {
          animation: leftPageFlipRight var(--duration-zine) var(--ease-zine);
        }
      }

      /* right pages */
      &:nth-child(odd) {
        &.animatingIn {
          animation: rightPageFlipRight var(--duration-zine) var(--ease-zine);
        }

        &.animatingOut {
          animation: rightPageGetCovered var(--duration-zine) var(--ease-zine);
        }
      }
    }
  }

  /* gradient overlay on right pages */
  [data-zine-part="page"]:nth-child(odd)::after {
    content: "";
    position: absolute;
    inset: 0;
    opacity: 5%;
    background-image: linear-gradient(to right, black, transparent 75%);
  }

  /* keyframes */
  @keyframes rightPageFlipLeft {
    from {
      display: block;
      z-index: 2;
      transform: rotate3d(0, 1, 0, 0.01deg);
    }
    to {
      transform: rotate3d(0, 1, 0, -180deg);
    }
  }

  @keyframes rightPageFlipRight {
    from {
      transform: rotate3d(0, 1, 0, -180deg);
    }
    to {
      display: block;
      z-index: 2;
      transform: rotate3d(0, 1, 0, 0.01deg);
    }
  }

  @keyframes rightPageGetCovered {
    from {
      display: block;
    }
  }

  @keyframes leftPageFlipLeft {
    from {
      transform: rotate3d(0, 1, 0, 180deg);
    }
    to {
      transform: rotate3d(0, 1, 0, 0.01deg);
    }
  }

  @keyframes leftPageFlipRight {
    from {
      display: block;
      z-index: 2;
      transform: rotate3d(0, 1, 0, 0.01deg);
    }
    to {
      transform: rotate3d(0, 1, 0, 180deg);
    }
  }

  @keyframes leftPageGetCovered {
    from {
      display: block;
    }
  }
}
