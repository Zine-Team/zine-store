{#
    Select

    props = {
        name: "" // internal way to reference the select on the page
        options = [], // object of strings that should be available
        label: "" // *optional* text for the label
        placeholder: "", // *optional* that gives a non-selected label to the select
    }
    @attrs = {} // all other HTML attributes
#}

{% macro select(props={}, attrs={}) %}
<label
    x-data="{option: '{% if props.placeholder %}{% else %}{{props.options[0]}}{% endif %}'}"
    class="flex items-center gap-1"
    >
    <span class="font-bold">{{ props.label }}</span>
    <select
        x-init="$dispatch('select-{{ props.name }}', option)"
        x-on:change="$dispatch('select-{{ props.name }}', option)"
        x-model="option"
        name="{{ props.name }}"
        {% for key, value in attrs %}
            {% if key != 'class' %}{{ key }}="{{ value }}"{% endif %}
        {% endfor %}
        class="leading-none bg-white-smoke hover:bg-ghost-white border-1 border-dark-grey hover:border-grey min-w-15 shadow-2xs rounded p-2.5 {{ attrs.class }}"
    >
        {% if props.placeholder %}<option value="" disabled>{{ props.placeholder}}</option>{% endif %}
        <template x-for="option in [{% for option in props.options %}'{{ option }}',{% endfor%}]">
            <option x-text="option"></option>
        </template>
    </select>
</label>
{% endmacro %}
