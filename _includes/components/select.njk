{# Component Documentation ------------------------------------------------------------------------------------------------------------- #}

{% set selectMeta = {
    args: '{{ select(
    props={
        name: "",
        label: "",
        description: "",
        options: [{label:"", value: ""}],
        direction: "column | row",
        fieldAttrs: {
            placeholder: "",
            required: boolean
        }
    },
    attrs={}
) }}',
description: "
- If you want access to the selected option, define a `x-data` value in a parent element with the key as the `props.name` of this component.
"
} %}

{# Nested Components ------------------------------------------------------------------------------------------------------------------- #}

{% from "snippets/loopAttrs.njk" import loopAttrs %}
{% from "components/_fieldParts.njk" import fieldLabel, fieldDescription, directionClasses, fieldStyles %}

{# Macro ------------------------------------------------------------------------------------------------------------------------------- #}

{% macro select(props={}, attrs={}) %}

{# Values ------------------------------------------------------------------------------------------------------------------------------ #}

{% set newArr = [] %}
{% for option in props.options %}
    {% set newArr = (newArr.push(option.value), newArr) %}
{% endfor %}

{# ------------------------------------------------------------------------------------------------------------------------------------- #}

<div
    {{ loopAttrs(attrs) }}
    class="{% if props.direction %}{{ directionClasses[props.direction] }}{% else %}{{ directionClasses['column'] }}{% endif %} {{ attrs.class }}">

    {% if props.label %}{{ fieldLabel({tag: "label", fieldProps:props}) }}{% endif %}

    <select
        name="{{ props.name }}"
        id="{{ props.name }}"
        {{ loopAttrs(props.fieldAttrs) }}
        class="{{ fieldStyles }} {{ props.fieldAttrs.class }}"
        x-on:change="{{ props.name }} = {index: {{ newArr | dump }}.indexOf($event.target.value) + 1, value: $event.target.value}"
    >
        {% if props.fieldAttrs.placeholder %}<option value="" selected disabled>{{ props.fieldAttrs.placeholder}}</option>{% endif %}
        {% for option in props.options %}
            <option
            value="{{ option.value }}">{{ option.label }}</option>
        {% endfor %}
    </select>

    {% if props.description %}{{ fieldDescription(props) }}{% endif %}
</div>

{# ------------------------------------------------------------------------------------------------------------------------------------- #}

{% endmacro %}
