{% set copyToClipboardMeta = {
    args: '{% call copyToClipboard(
    props={
        input: "",
        copyRef: "",
        toastMessage: "",
        toasterId: ""
    },
    attrs={}
) %}
{% endcall %}',
description: "
- Use `input` or `copyRef`, not both. `copyRef` is the `x-ref` value of an element inside the caller() that you want to copy the `innerText` value of.
- Give an element inside the caller() the attribute `@click: 'copy'` to trigger the copy event.
- Must also have the `toast` component in your components folder.
- Must have the `toaster` component somewhere on the page to work.
"
} %}

{# ------------------------------------------------------------------------------------------------------------------------------------- #}


{% from "components/toast.njk" import toast %}

{% macro copyToClipboard(props={}, attrs={}) %}

    <span x-data="{
        input: {% if props.input %}'{{ props.input }}'{% else %}$refs.{{ props.copyRef }}.innerText{% endif %},
        copied: false,
        timeout: null,
        copy () {
            $clipboard(this.input)
            this.copied = true
            clearTimeout(this.timeout)
            this.timeout = setTimeout(() => {
                this.copied = false
            }, 2000)
        }
    }"
    {% include "snippets/loopAttrs.njk" %}
    class="{{ attrs.class }}"
    >
        {{ caller() | safe }}
        {{ toast({message: props.toastMessage, toasterId: toasterId, show: "copied"}) }}
    </span>
{% endmacro %}
